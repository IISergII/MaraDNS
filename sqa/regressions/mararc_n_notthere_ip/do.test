#!/bin/sh

# Find Lunacy or lua
LUNACY=""
# Command is POSIX: https://www.unix.com/man-page/posix/1p/command/
if command -v lunacy64 >/dev/null 2>&1 ; then
  LUNACY=lunacy64
elif command -v lunacy >/dev/null 2>&1 ; then
  LUNACY=lunacy
elif command -v lua5.1 >/dev/null 2>&1 ; then
  LUNACY=lua5.1
elif command -v lua-5.1 >/dev/null 2>&1 ; then
  LUNACY=lua-5.1
elif command -v lua >/dev/null 2>&1 ; then
  LUNACY=lua
fi
if [ -z "$LUNACY" ] ; then
  echo Please install Lunacy or Lua 5.1
  echo Either the version included with MaraDNS -or- the version at
  echo https://github.com/samboy/lunacy
  exit 1
fi

cat > mararc1 << EOF
ipv4_bind_addresses = "127.0.0.5"
verbose_level=0
chroot_dir = "$( pwd )"
csv2 = {}
csv2["."] = "db.root"
EOF

cat > mararc3 << EOF
ipv4_bind_addresses = "127.0.0.3"
verbose_level=0
chroot_dir = "$( pwd )"
csv2 = {}
csv2["example.com."] = "db.example"
notthere_ip = "10.11.12.13"
EOF

cat > db.root << EOF
example.com. NS ns.example.com.
ns.example.com. 127.0.0.3
EOF

cat > db.example << EOF
example.com. NS ns.example.com.
ns.example.com. 127.0.0.3
www.example.com. 127.10.1.1
EOF

for LEVEL in 0 1 2 ; do

echo
echo PARAM: handle_noreply=${LEVEL}

cat > mararc2 << EOF
ipv4_bind_addresses = "127.0.0.2"
verbose_level=0
handle_noreply=${LEVEL}
chroot_dir = "$( pwd )"
recursive_acl = "127.0.0.1/8"
root_servers = {}
root_servers["."] = "127.0.0.5"
root_servers["net."] = "127.0.0.4"
notthere_ip = "10.11.12.13"
EOF

../../../server/maradns -f mararc1 > /dev/null 2>&1 &
sleep 1
../../../server/maradns -f mararc2 > /dev/null 2>&1 &
sleep 1
../../../server/maradns -f mararc3 > /dev/null 2>&1 &
sleep 1

echo
echo PARAM: Asking for non-existent hostname
../../../tools/askmara -t 2 Afooz.example.com. 127.0.0.2 | $LUNACY lrx.lunacy
echo
echo PARAM: Asking for existing hostname
../../../tools/askmara -t 2 Awww.example.com. 127.0.0.2 | $LUNACY lrx.lunacy
echo
echo PARAM: Asking for hostname from non-responsive server
../../../tools/askmara -t 5 Awww.example.net. 127.0.0.2 | $LUNACY lrx.lunacy
sleep 1
echo
echo PARAM: Asking for authoritative non-existent hostname
../../../tools/askmara -t 2 Afooz.example.com. 127.0.0.3 | $LUNACY lrx.lunacy
sleep 1
echo

# Clean up
kill $( ps auxw | grep maradns | grep -v grep | awk '{print $2}' )
sleep 1
# Linux specific; this does bad things on Solaris
killall maradns > /dev/null 2>&1

done

rm mararc1
rm mararc2
rm mararc3
rm db.root
rm db.example

